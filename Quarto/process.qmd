---
title: "Processing time-to-center data"
format: html
params:
  city: moscow
---

Attach the libraries first.

```{r}
#| label: attach-libraries
#| output: false
#| code-fold: true
library(sf)
library(DBI)
library(tmap)
library(here)
library(tidyverse)
library(lubridate)
```

I uploaded the shapefiles generated by Python querying scripts to a PostGIS database.
Fetch it for processing.

```{r}
#| label: fetch-raw-data-from-db
connection <- dbConnect(
  drv = RPostgres::Postgres(),
  host = "localhost",
  dbname = "projects"
)

raw_table <- paste0(params$city, "_raw")
raw <- st_read(connection, Id(schema = "time_to_center", table = raw_table))

dbDisconnect(connection)

head(raw) |> knitr::kable()
```

The times are currently recorded as strings, which makes them rather unusable for any meaningful analysis.
Also, the data is not in tidy format.
Let's convert the duration into minutes and tidy the table:

```{r}
proc <- raw |>
  mutate(across(c(public, car, walk, cycle), ~na_if(.x, "no route"))) |>
  mutate(across(c(public, car, walk, cycle), ~str_replace(.x, "m", "min"))) |>
  mutate(across(c(public, car, walk, cycle), as.duration)) |>
  pivot_longer(c(public, car, walk, cycle), names_to = "mode", values_to = "duration") |>
  mutate(duration = duration / dminutes(1))

head(proc) |> knitr::kable()
```

```{r}
#| label: fig-moscow-public
#| fig.cap: "Time to center in minutes."
proc |> 
  tm_shape() +
  tm_facets(by = "mode") +
  tm_symbols(size = 0.2, col = "duration", n = 20, border.lwd = 0) +
  tm_layout(legend.outside = TRUE)
```

Now let's save the processed table back to the database.

```{r}
#| label: upload-processed-data-to-db
#| output: false
connection <- dbConnect(
  drv = RPostgres::Postgres(),
  host = "localhost",
  dbname = "projects"
)

proc |>
  st_write(connection, Id(schema = "time_to_center", table = params$city))

dbDisconnect(connection)
```
